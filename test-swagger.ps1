# Script de teste do Swagger - Automo Backend
# Baseado no afrikancoders-backend

Write-Host "üß™ Testando se o Swagger est√° funcionando..." -ForegroundColor Cyan

# Verificar se a aplica√ß√£o est√° rodando
Write-Host "üîç Verificando se a aplica√ß√£o est√° rodando..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/actuator/health" -UseBasicParsing -ErrorAction Stop
    Write-Host "‚úÖ Aplica√ß√£o est√° rodando em http://localhost:8081" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Aplica√ß√£o n√£o est√° rodando em http://localhost:8081" -ForegroundColor Red
    exit 1
}

Write-Host "`nüîç Testando endpoints do Swagger..." -ForegroundColor Yellow

# Testar Swagger UI
Write-Host "üì± Testando Swagger UI..." -ForegroundColor White
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/swagger-ui/index.html" -UseBasicParsing -ErrorAction Stop
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Swagger UI est√° acess√≠vel" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Swagger UI retornou status: $($response.StatusCode)" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Swagger UI n√£o est√° acess√≠vel: $($_.Exception.Message)" -ForegroundColor Red
}

# Testar API Docs
Write-Host "üìö Testando API Docs..." -ForegroundColor White
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/api-docs" -UseBasicParsing -ErrorAction Stop
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ API Docs est√° acess√≠vel" -ForegroundColor Green
    } else {
        Write-Host "‚ùå API Docs retornou status: $($response.StatusCode)" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå API Docs n√£o est√° acess√≠vel: $($_.Exception.Message)" -ForegroundColor Red
}

# Testar Swagger Config
Write-Host "‚öôÔ∏è Testando Swagger Config..." -ForegroundColor White
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/api-docs/swagger-config" -UseBasicParsing -ErrorAction Stop
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Swagger Config est√° acess√≠vel" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Swagger Config retornou status: $($response.StatusCode)" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Swagger Config n√£o est√° acess√≠vel: $($_.Exception.Message)" -ForegroundColor Red
}

# Testar V3 API Docs
Write-Host "üîå Testando V3 API Docs..." -ForegroundColor White
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/v3/api-docs" -UseBasicParsing -ErrorAction Stop
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ V3 API Docs est√° acess√≠vel" -ForegroundColor Green
    } else {
        Write-Host "‚ùå V3 API Docs retornou status: $($response.StatusCode)" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå V3 API Docs n√£o est√° acess√≠vel: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüåê URLs para testar manualmente:" -ForegroundColor Cyan
Write-Host "   - Swagger UI: http://localhost:8081/swagger-ui/index.html" -ForegroundColor White
Write-Host "   - API Docs: http://localhost:8081/api-docs" -ForegroundColor White
Write-Host "   - Swagger Config: http://localhost:8081/api-docs/swagger-config" -ForegroundColor White
Write-Host "   - V3 API Docs: http://localhost:8081/v3/api-docs" -ForegroundColor White

Write-Host "`nüí° Se algum endpoint retornar 403, verifique o SecurityConfig.java" -ForegroundColor Yellow
Write-Host "üí° Se algum endpoint retornar 404, verifique a configura√ß√£o do Swagger" -ForegroundColor Yellow

Write-Host "`n‚úÖ Teste conclu√≠do!" -ForegroundColor Green 